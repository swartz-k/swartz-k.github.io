<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on ax for swartz</title>
    <link>https://www.ax4j.com/posts/</link>
    <description>Recent content in Posts on ax for swartz</description>
    <image>
      <url>https://www.ax4j.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.ax4j.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 14 Nov 2021 22:58:01 +0800</lastBuildDate><atom:link href="https://www.ax4j.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KubeEdge 边缘计算 AI 框架分析 - Sedna</title>
      <link>https://www.ax4j.com/posts/sedna/</link>
      <pubDate>Sun, 14 Nov 2021 22:58:01 +0800</pubDate>
      
      <guid>https://www.ax4j.com/posts/sedna/</guid>
      <description>分析 Sedna 框架，带你感受 AI + 边缘计算的神奇魅力 (ﾉﾟ0ﾟ)ﾉ~</description>
    </item>
    
    <item>
      <title>Golang 中的领域驱动设计 - 战术设计</title>
      <link>https://www.ax4j.com/posts/ddd-using-golang-tactical-design/</link>
      <pubDate>Sat, 13 Nov 2021 16:17:21 +0800</pubDate>
      
      <guid>https://www.ax4j.com/posts/ddd-using-golang-tactical-design/</guid>
      <description>上篇文章中我们讲了在 Golang 中实现领域驱动设计 DDD 相关的战略设计，这一篇我们会提供更多代码示例，从战术层面讲一讲应该如何做！</description>
    </item>
    
    <item>
      <title>Golang 中的领域驱动设计 - 战略设计</title>
      <link>https://www.ax4j.com/posts/domain-driven-design-in-golang-strategic-design/</link>
      <pubDate>Thu, 11 Nov 2021 23:40:00 +0800</pubDate>
      
      <guid>https://www.ax4j.com/posts/domain-driven-design-in-golang-strategic-design/</guid>
      <description>还在用面向对象的设计吗？考虑一下 DDD 你会发现真香！从战略层面了解 Golang中如何实现 领域驱动设计 DDD。</description>
    </item>
    
    <item>
      <title>如何让 AI 模型跑起来系列 - Tensorflow</title>
      <link>https://www.ax4j.com/posts/ai-model-serving-tensorflow/</link>
      <pubDate>Wed, 10 Nov 2021 20:50:21 +0800</pubDate>
      
      <guid>https://www.ax4j.com/posts/ai-model-serving-tensorflow/</guid>
      <description>了解 AI 模型如何 Serving 之 Tensorflow Serving，会带你深入源码，研究 model 如何变成 http、grpc 服务</description>
    </item>
    
    <item>
      <title>Using WebAssembly threads from C, C&#43;&#43; and Rust</title>
      <link>https://www.ax4j.com/posts/using-webassembly-threads-from-c-cpp-rust/</link>
      <pubDate>Thu, 09 Sep 2021 14:00:00 +0800</pubDate>
      
      <guid>https://www.ax4j.com/posts/using-webassembly-threads-from-c-cpp-rust/</guid>
      <description>了解如何将用其他语言编写的多线程应用程序引入 WebAssembly。</description>
    </item>
    
  </channel>
</rss>
